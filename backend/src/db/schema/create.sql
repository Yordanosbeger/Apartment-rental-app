

-- DROP EXISTING TABLES WITH CASCADE
DROP TABLE IF EXISTS MESSAGES CASCADE;
DROP TABLE IF EXISTS APPLICATIONS CASCADE;
DROP TABLE IF EXISTS ROOMMATE_PREFERENCES CASCADE;
DROP TABLE IF EXISTS PROPERTIES CASCADE;
DROP TABLE IF EXISTS PROFILES CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;

-- CREATE USERS TABLE
CREATE TABLE USERS (
  ID SERIAL PRIMARY KEY,
  FIRSTNAME VARCHAR(100) NOT NULL,
  LASTNAME VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(150) NOT NULL UNIQUE,
  PASSWORD VARCHAR(255) NOT NULL,
  ROLE VARCHAR(50) NOT NULL CHECK (ROLE IN ('TENANT', 'LANDLORD'))
);

-- CREATE PROFILES TABLE
CREATE TABLE PROFILES (
  ID SERIAL PRIMARY KEY,
  USER_ID INTEGER NOT NULL REFERENCES USERS(ID),
  FIRSTNAME VARCHAR(100),
  LASTNAME VARCHAR(100),
  PHONE_NUMBER VARCHAR(15),
  OCCUPATION VARCHAR(50) NOT NULL CHECK (OCCUPATION IN ('STUDENT', 'EMPLOYED')),
  PROFILE_PICTURE_URL VARCHAR(255),
  VERIFICATION_STATUS BOOLEAN DEFAULT FALSE
);

-- CREATE PROPERTIES TABLE
CREATE TABLE PROPERTIES (
  ID SERIAL PRIMARY KEY,
  USER_ID INTEGER NOT NULL REFERENCES USERS(ID),
  TITLE VARCHAR(150) NOT NULL,
  DESCRIPTION TEXT,
  LOCATION VARCHAR(255) NOT NULL,
  PRICE DECIMAL(10, 2) NOT NULL,
  PHOTOS JSON,
  AVAILABLE_FROM DATE NOT NULL,
  PROPERTY_TYPE VARCHAR(50) NOT NULL CHECK (PROPERTY_TYPE IN ('CONDO', 'APARTMENT', 'HOUSE', 'STUDIO')),
  BEDROOM_COUNT INTEGER NOT NULL CHECK (BEDROOM_COUNT >= 0),
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- CREATE ROOMMATE_PREFERENCES TABLE
CREATE TABLE ROOMMATE_PREFERENCES (
  ID SERIAL PRIMARY KEY,
  USER_ID INTEGER NOT NULL REFERENCES USERS(ID),
  GENDER_PREF VARCHAR(50),
  MAX_BUDGET DECIMAL(10, 2),
  LIFESTYLE_DETAILS TEXT
);

-- CREATE APPLICATIONS TABLE
CREATE TABLE APPLICATIONS (
  ID SERIAL PRIMARY KEY,
  TENANT_ID INTEGER NOT NULL REFERENCES USERS(ID),
  PROPERTY_ID INTEGER NOT NULL REFERENCES PROPERTIES(ID),
  APPLICATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  SCREENING_STATUS BOOLEAN DEFAULT FALSE -- FALSE MEANS NOT SCREENED
);

-- CREATE MESSAGES TABLE
CREATE TABLE MESSAGES (
  ID SERIAL PRIMARY KEY,
  SENDER_ID INTEGER NOT NULL REFERENCES USERS(ID),
  RECEIVER_ID INTEGER NOT NULL REFERENCES USERS(ID),
  CONTENT TEXT NOT NULL,
  TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  READ_STATUS BOOLEAN DEFAULT FALSE
);
